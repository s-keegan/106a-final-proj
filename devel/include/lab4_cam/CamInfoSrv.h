// Generated by gencpp from file lab4_cam/CamInfoSrv.msg
// DO NOT EDIT!


#ifndef LAB4_CAM_MESSAGE_CAMINFOSRV_H
#define LAB4_CAM_MESSAGE_CAMINFOSRV_H

#include <ros/service_traits.h>


#include <lab4_cam/CamInfoSrvRequest.h>
#include <lab4_cam/CamInfoSrvResponse.h>


namespace lab4_cam
{

struct CamInfoSrv
{

typedef CamInfoSrvRequest Request;
typedef CamInfoSrvResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CamInfoSrv
} // namespace lab4_cam


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::lab4_cam::CamInfoSrv > {
  static const char* value()
  {
    return "34aee9a6c9f1f2e9e5dd90a4fdf279af";
  }

  static const char* value(const ::lab4_cam::CamInfoSrv&) { return value(); }
};

template<>
struct DataType< ::lab4_cam::CamInfoSrv > {
  static const char* value()
  {
    return "lab4_cam/CamInfoSrv";
  }

  static const char* value(const ::lab4_cam::CamInfoSrv&) { return value(); }
};


// service_traits::MD5Sum< ::lab4_cam::CamInfoSrvRequest> should match 
// service_traits::MD5Sum< ::lab4_cam::CamInfoSrv > 
template<>
struct MD5Sum< ::lab4_cam::CamInfoSrvRequest>
{
  static const char* value()
  {
    return MD5Sum< ::lab4_cam::CamInfoSrv >::value();
  }
  static const char* value(const ::lab4_cam::CamInfoSrvRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::lab4_cam::CamInfoSrvRequest> should match 
// service_traits::DataType< ::lab4_cam::CamInfoSrv > 
template<>
struct DataType< ::lab4_cam::CamInfoSrvRequest>
{
  static const char* value()
  {
    return DataType< ::lab4_cam::CamInfoSrv >::value();
  }
  static const char* value(const ::lab4_cam::CamInfoSrvRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::lab4_cam::CamInfoSrvResponse> should match 
// service_traits::MD5Sum< ::lab4_cam::CamInfoSrv > 
template<>
struct MD5Sum< ::lab4_cam::CamInfoSrvResponse>
{
  static const char* value()
  {
    return MD5Sum< ::lab4_cam::CamInfoSrv >::value();
  }
  static const char* value(const ::lab4_cam::CamInfoSrvResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::lab4_cam::CamInfoSrvResponse> should match 
// service_traits::DataType< ::lab4_cam::CamInfoSrv > 
template<>
struct DataType< ::lab4_cam::CamInfoSrvResponse>
{
  static const char* value()
  {
    return DataType< ::lab4_cam::CamInfoSrv >::value();
  }
  static const char* value(const ::lab4_cam::CamInfoSrvResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // LAB4_CAM_MESSAGE_CAMINFOSRV_H
